close all; clear all; clc;

load('data.mat');
all_data = table2array(data);
clear data


temp_infill = all_data(:,4);
temp_infill(temp_infill == 1) = 4; 
temp_infill(temp_infill == 2) = 6;
all_data(:,4) = temp_infill;

temp_material = all_data(:,8); 
% abs UTS
temp_material(temp_material == 1) = 27;
% pla UTS
temp_material(temp_material == 2) = 37; 
all_data(:,8) = temp_material;
% random number generator to separate into train - cv - test 

normalized_data = featureNormalize(all_data);
all_data = normalized_data;

idx = randperm(50,50);

train_idx = idx(1:30); 
cv_idx = idx(31:40); 
test_idx = idx(41:50); 

train = zeros(30, 12);
cv = zeros(10, 12);
test = zeros(10, 12); 

% 1  = grid, 2 = honeycomb
% 1 = abs, 2 = pla
%%

for i = 1:length(train_idx)
    idx = train_idx(i);
    train(i,:) = all_data(idx,:);
end 
save('train.mat','train')

for i = 1:length(cv_idx)
    idx = cv_idx(i);
    cv(i,:) = all_data(idx,:);
end

save('cv.mat','cv')

for i = 1:length(test_idx)
    idx = test_idx(i);
    test(i,:) = all_data(idx,:);
end 
save('test.mat','test')

% column labels 
% inputs
layer_height = 1; 
wall_thickness = 2; 
infill_density = 3; 
infill_pattern = 4; 
nozzle_temperature = 5; 
bed_temperature = 6; 
print_speed = 7;
material = 8; 
fan_speed = 9; 

% outputs
roughness = 10; 
tension_strength = 11; 
elongation = 12;

% training data columns separated 
train_data.layer_height = train(:,1); 
train_data.wall_thickness = train(:,2); 
train_data.infill_density = train(:,3); 
train_data.infill_pattern = train(:,4);

train_data.nozzle_temperature = train(:,5); 
train_data.bed_temperature = train(:,6); 
train_data.print_speed = train(:,7);
train_data.material = train(:,8); 

train_data.fan_speed = train(:,9); 

train_data.inputs = [train_data.layer_height,...
                     train_data.wall_thickness,...
                     train_data.infill_density,...
                     train_data.infill_pattern,...
                     train_data.nozzle_temperature,...
                     train_data.bed_temperature ,...
                     train_data.print_speed,...
                     train_data.material,...
                     train_data.fan_speed];
                 
train_data.normalized_inputs = featureNormalize(train_data.inputs);
train_data.tension_strength = train(:,11); 
train_data.normalized_young = featureNormalize(train_data.tension_strength);

save('train_data.mat', 'train_data')

% cross-validation data columns separated 
cv_data.layer_height = cv(:,1); 
cv_data.wall_thickness = cv(:,2); 
cv_data.infill_density = cv(:,3); 
cv_data.infill_pattern = cv(:,4); 
cv_data.infill_pattern(cv_data.infill_pattern == 1) = 4; 
cv_data.infill_pattern(cv_data.infill_pattern == 2) = 6;
cv_data.nozzle_temperature = cv(:,5); 
cv_data.bed_temperature = cv(:,6); 
cv_data.print_speed = cv(:,7);
cv_data.material = cv(:,8); 

cv_data.material(train_data.material == 1) = 27; 
cv_data.material(train_data.material == 2) = 37; 

cv_data.fan_speed = cv(:,9); 

cv_data.inputs = [cv_data.layer_height,...
                     cv_data.wall_thickness,...
                     cv_data.infill_density,...
                     cv_data.infill_pattern,...
                     cv_data.nozzle_temperature,...
                     cv_data.bed_temperature ,...
                     cv_data.print_speed,...
                     cv_data.material,...
                     cv_data.fan_speed];

cv_data.normalized_inputs = featureNormalize(cv_data.inputs);

cv_data.tension_strength = cv(:,11); 
cv_data.normalized_young = featureNormalize(cv_data.tension_strength);
save('cv_data.mat', 'cv_data')
