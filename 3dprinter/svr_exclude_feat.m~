function [] = svr_exclude_feat(train, cv, exclude)
    train_inputs = train(:, 1:9); 
    cv_inputs = cv(:, 1:9);
    
    train_y = train(:, 11);
    cv_y = cv(:, 11); 
    
    train_reduced_X = reduced_features(train_inputs, exclude);
    cv_reduced_X = reduced_features(cv_inputs, exclude);
    
    train_svr_Mdl = fitrsvm(train_reduced_X, train_y);% , 'KernelFunction','gaussian');

    train_reduced_ypred = resubPredict(train_svr_Mdl);
    train_reduced_err = train_reduced_ypred - train_y; 

    cv_reduced_ypred = predict(train_svr_Mdl, cv_reduced_X);
    cv_reduced_err = cv_reduced_ypred - cv_y;

    figure;
    plot(cv.reduced679.ypred, 'o');
    hold on; 
    plot(cv.y, '*');
    legend('predicted' , 'actual')
    plot(cv.reduced679.err)
    title('removed features6-7-9: predict and actual normalized UTS')

    cv.reduced679.J_total = 1/(2*cv.m) * (cv.reduced679.err)' * cv.reduced679.err; 
    fprintf('cv_svr_total_loss : %d \n', cv.reduced679.J_total);

    train.reduced679.J_total = 1/(2*train.m) * (train.reduced679.err)' ...
                                    * train.reduced679.err; 
    fprintf('reduced_train_svr_total_loss : %d \n', train.reduced679.J_total);

    train.reduced679.training_svr_loss = resubLoss(train.reduced679.svr_Mdl);
    fprintf('reduced_training_svr_loss : %d \n',train.reduced679.training_svr_loss);

    plotfixer;
end 